{"openapi":"3.1.0","info":{"title":"Trading App API","description":"REST API for handling users, symbols, and orders in the trading system.","version":"1.0.0"},"paths":{"/auth/register":{"post":{"tags":["Auth"],"summary":"Register a new user","description":"Creates a new user account with username, email, and password. If no role is provided, the default role is **trader**.","operationId":"register_auth_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/login":{"post":{"tags":["Auth"],"summary":"User login","description":"Authenticates a user with username and password. Returns a JWT access token if credentials are valid.","operationId":"login_auth_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserLogin"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/me":{"get":{"tags":["Auth"],"summary":"Get current user profile","description":"Returns details (id, username, email, role) of the currently authenticated user.","operationId":"read_users_me_auth_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponse"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/symbols":{"get":{"summary":"Get all symbols","description":"Fetches a list of all available **symbols/instruments** in the system. Accessible by any authenticated user.","operationId":"get_symbols_symbols_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SymbolResponse"},"type":"array","title":"Response Get Symbols Symbols Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/orders/new":{"post":{"tags":["orders"],"summary":"Create a new order","description":"Allows an authenticated user to create a **new order**. The ticker is auto-filled from the selected symbol. Rate limited to **2 requests every 15 seconds**.","operationId":"create_order_orders_new_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/orders/all":{"get":{"tags":["orders"],"summary":"Get all orders (admin only)","description":"Returns a list of **all orders in the system**. Only users with role `admin` can access this endpoint.","operationId":"get_all_orders_orders_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/OrderResponse"},"type":"array","title":"Response Get All Orders Orders All Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/orders/me":{"get":{"tags":["orders"],"summary":"Get my orders","description":"Fetches all orders that belong to the **currently authenticated user**.","operationId":"get_my_orders_orders_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/OrderResponse"},"type":"array","title":"Response Get My Orders Orders Me Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/orders/cancel/{order_id}":{"delete":{"tags":["orders"],"summary":"Cancel an order","description":"Cancels an **existing order** by its ID. Only the order owner can cancel it, and only if its status is **pending**.","operationId":"cancel_order_orders_cancel__order_id__delete","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"order_id","in":"path","required":true,"schema":{"type":"integer","title":"Order Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OrderResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/orders/symbol/{symbol_id}":{"get":{"tags":["orders"],"summary":"Get orders by symbol","description":"Fetches all orders that are linked to a given **symbol ID**. Includes related user and symbol details.","operationId":"get_orders_by_symbol_orders_symbol__symbol_id__get","security":[{"OAuth2PasswordBearer":[]}],"parameters":[{"name":"symbol_id","in":"path","required":true,"schema":{"type":"integer","title":"Symbol Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OrderResponse"},"title":"Response Get Orders By Symbol Orders Symbol  Symbol Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/trades/all":{"get":{"tags":["trades"],"summary":"Get all trades","description":"Retrieve a list of all executed trades in the system. ⚠️ Only users with the **admin** role are allowed to access this endpoint.","operationId":"get_all_trades_trades_all_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TradeResponse"},"type":"array","title":"Response Get All Trades Trades All Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/trades/me":{"get":{"tags":["trades"],"summary":"Get my trades","description":"Fetch all trades where the current authenticated user was involved (either as a **buyer** or a **seller**).","operationId":"get_my_trades_trades_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TradeResponse"},"type":"array","title":"Response Get My Trades Trades Me Get"}}}}},"security":[{"OAuth2PasswordBearer":[]}]}},"/trades/symbol/{symbol_id}":{"get":{"tags":["trades"],"summary":"Get trades by symbol","description":"Fetch all trades for a specific **symbol** identified by its `symbol_id`. Useful for analyzing the trade history of a particular instrument.","operationId":"get_trades_by_symbol_trades_symbol__symbol_id__get","parameters":[{"name":"symbol_id","in":"path","required":true,"schema":{"type":"integer","title":"Symbol Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TradeResponse"},"title":"Response Get Trades By Symbol Trades Symbol  Symbol Id  Get"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/ws/orderbook/{symbol_id}":{"get":{"tags":["WebSocket"],"summary":"Ws Orderbook Docs","description":"Summary:\n    Order Book WebSocket Stream (Documentation Only)\n\nDescription:\n    This endpoint is for **documentation purposes only**.  \n    The actual connection must be made using **WebSocket**:\n\n    ```\n    wss://<your-server>/ws/orderbook/{symbol_id}\n    ```\n\n    Once connected:\n    - The server will immediately send the latest **order book** and **last traded price (LTP)**.  \n    - Updates will then be broadcasted every **2 seconds**.  \n    - You can send any small message (like `\"ping\"`) to keep the connection alive.  \n\n    ### Response Format:\n    ```json\n    {\n        \"symbol_id\": 1,\n        \"order_book\": {\n            \"bids\": [\n                {\"price\": 101.5, \"quantity\": 50},\n                {\"price\": 101.0, \"quantity\": 30}\n            ],\n            \"asks\": [\n                {\"price\": 102.0, \"quantity\": 40},\n                {\"price\": 102.5, \"quantity\": 25}\n            ]\n        },\n        \"ltp\": 101.75\n    }\n    ```\n\n    ### Notes:\n    - `bids` → top 5 buy orders, sorted by **highest price first**  \n    - `asks` → top 5 sell orders, sorted by **lowest price first**  \n    - `ltp` → last traded price for the symbol","operationId":"ws_orderbook_docs_ws_orderbook__symbol_id__get","parameters":[{"name":"symbol_id","in":"path","required":true,"schema":{"type":"integer","title":"Symbol Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Root","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"OrderCreate":{"properties":{"symbol_id":{"type":"integer","title":"Symbol Id"},"side":{"type":"string","pattern":"^(B|S)$","title":"Side"},"quantity":{"type":"integer","title":"Quantity"},"price":{"type":"number","title":"Price"},"type":{"type":"string","pattern":"^(M|L)$","title":"Type"}},"type":"object","required":["symbol_id","side","quantity","price","type"],"title":"OrderCreate"},"OrderResponse":{"properties":{"id":{"type":"integer","title":"Id"},"user_id":{"type":"integer","title":"User Id"},"symbol_id":{"type":"integer","title":"Symbol Id"},"ticker":{"type":"string","title":"Ticker"},"side":{"type":"string","title":"Side"},"quantity":{"type":"integer","title":"Quantity"},"exec_qty":{"type":"integer","title":"Exec Qty"},"price":{"type":"number","title":"Price"},"status":{"$ref":"#/components/schemas/OrderStatus"},"type":{"type":"string","title":"Type"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp"}},"type":"object","required":["id","user_id","symbol_id","ticker","side","quantity","exec_qty","price","status","type","timestamp"],"title":"OrderResponse"},"OrderStatus":{"type":"string","enum":["pending","filled","cancelled","partially_filled"],"title":"OrderStatus"},"SymbolResponse":{"properties":{"id":{"type":"integer","title":"Id"},"name":{"type":"string","title":"Name"},"ticker":{"type":"string","title":"Ticker"}},"type":"object","required":["id","name","ticker"],"title":"SymbolResponse"},"TradeResponse":{"properties":{"id":{"type":"integer","title":"Id"},"buy_order_id":{"type":"integer","title":"Buy Order Id"},"buy_user_id":{"type":"integer","title":"Buy User Id"},"sell_order_id":{"type":"integer","title":"Sell Order Id"},"sell_user_id":{"type":"integer","title":"Sell User Id"},"symbol_id":{"type":"integer","title":"Symbol Id"},"ticker":{"type":"string","title":"Ticker"},"trade_price":{"type":"number","title":"Trade Price"},"trade_quantity":{"type":"number","title":"Trade Quantity"},"timestamp":{"type":"string","format":"date-time","title":"Timestamp"}},"type":"object","required":["id","buy_order_id","buy_user_id","sell_order_id","sell_user_id","symbol_id","ticker","trade_price","trade_quantity","timestamp"],"title":"TradeResponse"},"UserCreate":{"properties":{"username":{"type":"string","maxLength":20,"minLength":3,"pattern":"^[a-zA-Z0-9_]+$","title":"Username"},"email":{"type":"string","format":"email","title":"Email"},"password":{"type":"string","minLength":6,"title":"Password"},"role":{"type":"string","pattern":"^(trader)$","title":"Role","default":"trader"}},"type":"object","required":["username","email","password"],"title":"UserCreate"},"UserLogin":{"properties":{"username":{"type":"string","maxLength":20,"minLength":3,"pattern":"^[a-zA-Z0-9_]+$","title":"Username"},"password":{"type":"string","title":"Password"}},"type":"object","required":["username","password"],"title":"UserLogin"},"UserResponse":{"properties":{"id":{"type":"integer","title":"Id"},"username":{"type":"string","title":"Username"},"email":{"type":"string","format":"email","title":"Email"},"role":{"type":"string","title":"Role"}},"type":"object","required":["id","username","email","role"],"title":"UserResponse"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"OAuth2PasswordBearer":{"type":"oauth2","flows":{"password":{"scopes":{},"tokenUrl":"auth/login"}}}}}}